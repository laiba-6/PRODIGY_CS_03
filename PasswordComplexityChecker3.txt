import re

def password_complexity_checker(password):
    # Criteria
    min_length = 8
    has_upper = re.search(r'[A-Z]', password)
    has_lower = re.search(r'[a-z]', password)
    has_digit = re.search(r'\d', password)
    has_special = re.search(r'[!@#$%^&*(),.?":{}|<>]', password)

    # Initialize score and feedback
    score = 0
    feedback = []

    # Check length
    if len(password) >= min_length:
        score += 1
    else:
        feedback.append(f"Password must be at least {min_length} characters long.")

    # Check for uppercase letter
    if has_upper:
        score += 1
    else:
        feedback.append("Password must contain at least one uppercase letter.")

    # Check for lowercase letter
    if has_lower:
        score += 1
    else:
        feedback.append("Password must contain at least one lowercase letter.")

    # Check for digit
    if has_digit:
        score += 1
    else:
        feedback.append("Password must contain at least one digit.")

    # Check for special character
    if has_special:
        score += 1
    else:
        feedback.append("Password must contain at least one special character.")

    # Determine strength
    if score == 5:
        strength = "Strong"
    elif 3 <= score < 5:
        strength = "Medium"
    else:
        strength = "Weak"

    return strength, feedback

# Example usage
password = input("Enter a password to check its strength: ")
strength, feedback = password_complexity_checker(password)

print(f"Password Strength: {strength}")
for comment in feedback:
    print(f"- {comment}")
